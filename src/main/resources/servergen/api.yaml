openapi: "3.0.0"
info:
  version: 1.0.0
  title: Rawafed Employee Management App
  license:
    name: MIT

paths:
  /v1/employees:
    get:
      summary: List all employees
      operationId: v1ListEmployees
      tags:
        - employees
      parameters:
        - name: pageNo
          in: query
          description: Page of employee records
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of employees
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmployeesRes"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create an employee
      operationId: v1CreateEmployee
      tags:
        - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreateReq'
        required: true
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /v1/employees/{email}:
    get:
      summary: Info for a specific employee
      operationId: v1GetEmployee
      tags:
        - employees
      parameters:
        - name: email
          in: path
          required: true
          description: The email of the employee to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmployeeRes"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Updates a specific employee
      operationId: v1UpdateEmployee
      tags:
        - employees
      parameters:
        - name: email
          in: path
          required: true
          description: The email of the employee to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateReq'
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    EmployeeUpdateReq:
      type: object
      minProperties: 1
      properties:
        firstName:
          type: string
        lastName:
          type: string
        department:
          type: string
        salary:
          type: string
    EmployeeBaeDto:
      type: object
      required:
        - email
        - firstName
        - lastName
      properties:
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        department:
          type: string
        salary:
          type: string
    EmployeeRes:
      allOf:
        - $ref: "#/components/schemas/EmployeeBaeDto"
        - type: object
          properties:
            validEmail:
              type: string
            validDepartment:
              type: string
            notes:
              type: string
    EmployeeCreateReq:
      allOf:
        - $ref: "#/components/schemas/EmployeeBaeDto"
        - type: object
    EmployeesRes:
      type: array
      maxItems: 100
      items:
        $ref: "#/components/schemas/EmployeeRes"
    Error:
      type: object
      required:
        - code
        - message
        - description
      properties:
        code:
          type: string
        message:
          type: string
        description:
          type: string